<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Game on Ji Molloy</title>
    <link>http://localhost:1313/categories/game/</link>
    <description>Recent content in Game on Ji Molloy</description>
    <image>
      <title>Ji Molloy</title>
      <url>http://localhost:1313/assets/images/eevee-on-computer-circle.png</url>
      <link>http://localhost:1313/assets/images/eevee-on-computer-circle.png</link>
    </image>
    <generator>Hugo -- 0.144.2</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 30 Mar 2025 20:19:56 +1300</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/game/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>‚è≥üì¶ Time &amp; Space Complexity Explained with Pok√©mon! üéÆüêâ</title>
      <link>http://localhost:1313/posts/2025/time_space_complexity_with_pokemon/</link>
      <pubDate>Sun, 30 Mar 2025 20:19:56 +1300</pubDate>
      <guid>http://localhost:1313/posts/2025/time_space_complexity_with_pokemon/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;alt text&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/assets/images/eevee-and-charizard-space-time.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;When writing code, we often want to know &lt;em&gt;how fast&lt;/em&gt; it runs ‚è© and &lt;em&gt;how much memory&lt;/em&gt; it uses üíæ. This is where &lt;strong&gt;time complexity&lt;/strong&gt; and &lt;strong&gt;space complexity&lt;/strong&gt; comes in! Let&amp;rsquo;s break these down using Pok√©mon themed examples! üî•&lt;/p&gt;
&lt;h2 id=&#34;-big-o-notation---the-trainers-guide-&#34;&gt;‚ö° Big O Notation - The Trainer‚Äôs Guide üìñ&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.geeksforgeeks.org/analysis-algorithms-big-o-analysis/&#34;&gt;Big O notation&lt;/a&gt; helps us understand how an algorithm scales as the input size grows. Think of it as training a Pok√©mon: some level up quickly ‚ö°, while others take longer ‚è≥!&lt;/p&gt;</description>
    </item>
    <item>
      <title>How Team Topologies relates to League of Legends üòé</title>
      <link>http://localhost:1313/posts/2025/team-topologies-league-of-legends/</link>
      <pubDate>Fri, 14 Feb 2025 17:11:43 +1300</pubDate>
      <guid>http://localhost:1313/posts/2025/team-topologies-league-of-legends/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;alt text&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/assets/images/league-of-legends.jpg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;how-team-topologies-relates-to-the-different-positions-played-in-league-of-legends&#34;&gt;How Team Topologies Relates to the Different Positions Played in League of Legends&lt;/h2&gt;
&lt;p&gt;In both software development and competitive gaming, effective team structure and collaboration are critical to achieving success. Whether you are managing a sofware engineering team or playing a game of League of Legends (LoL), how you organise your team and define roles impacts the overall performance and outcome.&lt;/p&gt;
&lt;p&gt;In this blog, I&amp;rsquo;m going to draw an interesting comparison between &lt;a href=&#34;https://teamtopologies.com/&#34;&gt;Team Topologies&lt;/a&gt;: a framework used to define and optimise team structures in modern software engineering, and the positions in League of Legends. While one is about creating scalable and efficient software, and the other is about winning a fast-paced game, the principles of collaboration, specialised roles, and strategic alignment remain the same. If you haven&amp;rsquo;t read the book: Team Topologies yet, please checkout my previous blog post on book recommendations where it has more information about this blog and why you should read it!&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
