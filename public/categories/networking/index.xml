<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Networking on Ji Molloy</title>
    <link>http://localhost:1313/categories/networking/</link>
    <description>Recent content in Networking on Ji Molloy</description>
    <image>
      <title>Ji Molloy</title>
      <url>http://localhost:1313/assets/images/eevee-on-computer-circle.png</url>
      <link>http://localhost:1313/assets/images/eevee-on-computer-circle.png</link>
    </image>
    <generator>Hugo -- 0.150.0</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 23 Aug 2025 20:42:22 +1200</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/networking/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>üï∏Ô∏è Service Mesh &#43; Kubernetes üíë</title>
      <link>http://localhost:1313/posts/2025/service-mesh-101/</link>
      <pubDate>Sat, 23 Aug 2025 20:42:22 +1200</pubDate>
      <guid>http://localhost:1313/posts/2025/service-mesh-101/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;alt text&#34; loading=&#34;lazy&#34; src=&#34;http://localhost:1313/assets/images/eevee-and-charizard-in-service-mesh.jpeg&#34;&gt;&lt;/p&gt;
&lt;p&gt;If you have ever worked with Kubernetes and found yourself wondering ü§î &amp;ldquo;How do all my services talk to each other reliably, securely, and observably without writing heaps of networking logic into my application code?&amp;rdquo;&lt;/p&gt;
&lt;p&gt;That is exactly where a &lt;a href=&#34;https://aws.amazon.com/what-is/service-mesh/&#34;&gt;service mesh&lt;/a&gt; comes in. Let‚Äôs dive into what it is, how it is helpful, and why (or why not!) you might want to add one to your cluster üöÄ Let&amp;rsquo;s goooo!&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
